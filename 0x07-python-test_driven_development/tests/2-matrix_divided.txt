>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[6, 8, 12],[14, 18, 22]]
>>> print(matrix_divided(matrix, 2))
[[3.0, 4.0, 6.0], [7.0, 9.0, 11.0]]

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [[1.3, 2.6, 3.9],[-1.3, 2.6, -3.9]]
>>> print(matrix_divided(matrix, 3))
[[0.43, 0.87, 1.3], [-0.43, 0.87, -1.3]]

>>> matrix = [[1, 1.2, -2.3, 1.4, 6],[-1.5, 2, 3.00, 70, 1.999]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.4, -0.77, 0.47, 2.0], [-0.5, 0.67, 1.0, 23.33, 0.67]]

>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3],[1, 2, 3]]
>>> print(matrix_divided(matrix, "muffin"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = "mufn"
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3],[1, 2, 3, 4]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = []
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 2))
[[]]

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3],["muffin", 1, 2]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
